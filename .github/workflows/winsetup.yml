name: Setup Windows Server

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  setup-windows-server:
    runs-on: windows-latest

    steps:
      - name: Check Out Repository
        uses: actions/checkout@v4

      # Install AnyDesk & Detect Installation Path
      - name: Install RustDesk Silently
        id: install_rustdesk
        run: |
          # Execute silent installation
          Start-Process -Wait -FilePath "./rustdesk-1.3.8-x86_64.exe" -ArgumentList "--silent"
          
          # Verify installation
          $install_path = "C:\Program Files\RustDesk\rustdesk.exe"
          if (Test-Path $install_path) {
            Write-Host "RustDesk installed successfully at $install_path"
          } else {
            Write-Error "RustDesk installation failed"
            exit 1
          }
          
          # Add firewall rule if needed
          netsh advfirewall firewall add rule name="RustDesk" dir=in action=allow program="$install_path" enable=yes

          # Method 3: Search entire system for AnyDesk.exe
          if (-not $install_path -or !(Test-Path $install_path)) {
            Write-Host "Searching entire system for AnyDesk.exe..."
            $found_paths = Get-ChildItem -Path C:\ -Recurse -Filter "AnyDesk.exe" -ErrorAction SilentlyContinue | Select-Object -ExpandProperty DirectoryName
            if ($found_paths) {
              $install_path = $found_paths[0]
            }
          }

          # Final check
          if ($install_path -and (Test-Path $install_path)) {
            echo "ANYDESK_PATH=$install_path" | Out-File -FilePath $env:GITHUB_ENV -Append
            Write-Host "AnyDesk installed at: $install_path"
          } else {
            Write-Host "Failed to detect AnyDesk installation path using all methods!"
            exit 1
          }

      # Get AnyDesk ID
      - name: Get AnyDesk ID
        id: anydesk_id
        run: |
          $anydesk_exe = "${{ env.ANYDESK_PATH }}\AnyDesk.exe"
          
          if (Test-Path $anydesk_exe) {
            $anydesk_id = & $anydesk_exe --get-id
            Write-Host "AnyDesk ID: $anydesk_id"
            echo "ANYDESK_ID=$anydesk_id" | Out-File -FilePath $env:GITHUB_ENV -Append
          } else {
            Write-Host "AnyDesk executable not found at $anydesk_exe!"
            exit 1
          }

      # Install RustDesk & Detect Installation Path
      - name: Install RustDesk Silently
        id: install_rustdesk
        run: |
          choco install rustdesk -y --force | Tee-Object -FilePath rustdesk_install.log
          
          # Method 1: Extract from Chocolatey logs
          $install_path = Get-Content rustdesk_install.log | Select-String -Pattern "Deploying to '(.+?)'" | ForEach-Object { $_.Matches.Groups[1].Value }
          
          # Method 2: Check known installation locations
          if (-not $install_path -or !(Test-Path $install_path)) {
            $paths = @(
              "C:\Program Files (x86)\RustDesk",
              "C:\Program Files\RustDesk",
              "C:\Users\$env:USERNAME\AppData\Local\RustDesk"
            )
            foreach ($path in $paths) {
              if (Test-Path $path) {
                $install_path = $path
                break
              }
            }
          }

          # Method 3: Search entire system for RustDesk.exe
          if (-not $install_path -or !(Test-Path $install_path)) {
            Write-Host "Searching entire system for RustDesk.exe..."
            $found_paths = Get-ChildItem -Path C:\ -Recurse -Filter "RustDesk.exe" -ErrorAction SilentlyContinue | Select-Object -ExpandProperty DirectoryName
            if ($found_paths) {
              $install_path = $found_paths[0]
            }
          }

          # Final check
          if ($install_path -and (Test-Path $install_path)) {
            echo "RUSTDESK_PATH=$install_path" | Out-File -FilePath $env:GITHUB_ENV -Append
            Write-Host "RustDesk installed at: $install_path"
          } else {
            Write-Host "Failed to detect RustDesk installation path using all methods!"
            exit 1
          }

      # Get RustDesk ID
      - name: Get RustDesk ID
        id: rustdesk_id
        run: |
          $rustdesk_exe = "${{ env.RUSTDESK_PATH }}\rustdesk.exe"
          
          if (Test-Path $rustdesk_exe) {
            $rustdesk_id = & $rustdesk_exe --get-id
            Write-Host "RustDesk ID: $rustdesk_id"
            echo "RUSTDESK_ID=$rustdesk_id" | Out-File -FilePath $env:GITHUB_ENV -Append
          } else {
            Write-Host "RustDesk executable not found at $rustdesk_exe!"
            exit 1
          }

      # Validate and Display Connection Info
      - name: Show RustDesk Connection ID
        run: |
          if (-not $env:RUSTDESK_ID) {
            Write-Error "Failed to retrieve RustDesk ID"
            exit 1
          }
          Write-Host "SUCCESS! Use this ID to connect: $env:RUSTDESK_ID"
          Write-Host "------------------------------------------------"
          Write-Host "RUSTDESK_ID=$env:RUSTDESK_ID" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
