name: setup-windows-server

on: [push, workflow_dispatch]

jobs:
  setup-windows-server:
    runs-on: windows-latest

    steps:
      - name: Install Chocolatey
        run: |
          Write-Host "Checking for Chocolatey..."
          if (-Not (Test-Path "C:\ProgramData\Chocolatey")) {
            Set-ExecutionPolicy Bypass -Scope Process -Force
            [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
            Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
          } else {
            Write-Host "Chocolatey is already installed."
          }

      - name: Install AnyDesk Silently
        run: |
          choco install anydesk -y --force
          Start-Sleep -Seconds 15
          Write-Host "AnyDesk Installed Successfully."

      - name: Get AnyDesk ID
        id: anydesk_id
        run: |
          $anydesk_id = &"C:\Program Files (x86)\AnyDesk\AnyDesk.exe" --get-id
          Write-Host "AnyDesk ID: $anydesk_id"
          echo "ANYDESK_ID=$anydesk_id" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Install RustDesk Silently
        run: |
          choco install rustdesk -y --force
          Start-Sleep -Seconds 15
          Write-Host "RustDesk Installed Successfully."

      - name: Get RustDesk ID
        id: rustdesk_id
        run: |
          $rustdesk_id = Get-Content "$env:APPDATA\RustDesk\id"
          Write-Host "RustDesk ID: $rustdesk_id"
          echo "RUSTDESK_ID=$rustdesk_id" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Display Connection Info
        run: |
          Write-Host "Use the following IDs to connect:"
          Write-Host "AnyDesk ID: $env:ANYDESK_ID"
          Write-Host "RustDesk ID: $env:RUSTDESK_ID"
